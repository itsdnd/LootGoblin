<UserControl x:Class="LootGoblin.Controls.ContainerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             Background="{DynamicResource MaterialDesignPaper}"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="14"
             FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             Width="1370"
>

    <UserControl.Resources>
        <System:String x:Key="Armor">"Armor Sets"</System:String>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="5*" />
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Column="0" Header="Card Group Box" Style="{DynamicResource MaterialDesignCardGroupBox}" materialDesign:ColorZoneAssist.Mode="PrimaryDark" Margin="16">
            <GroupBox.HeaderTemplate>
                <DataTemplate>
                    <DockPanel Height="32">
                        <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/chest.png"/>
                        <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="Container List"/>
                    </DockPanel>
                </DataTemplate>
            </GroupBox.HeaderTemplate>
            <StackPanel>
                <TreeView x:Name="containerTree" ItemsSource="{Binding}" SelectedItemChanged="containerTree_SelectedItemChanged" Height="1290" VerticalAlignment="Top" VerticalContentAlignment="Stretch">
                    <TreeView.Resources>
                        <DataTemplate x:Key="ContainerNames">
                            <TextBlock Text="{Binding Path=Name}"  VerticalAlignment="Center" />
                        </DataTemplate>
                    </TreeView.Resources>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=NameList}" ItemTemplate="{StaticResource ResourceKey=ContainerNames}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Name}" Margin="5,0" VerticalAlignment="Center" />
                                <Label Content="(Type)" Foreground="{DynamicResource PrimaryHueMidBrush}" Background="{x:Null}"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </StackPanel>
        </GroupBox>
        <GroupBox Grid.Column="1" Header="Card Group Box" Style="{DynamicResource MaterialDesignCardGroupBox}" materialDesign:ColorZoneAssist.Mode="PrimaryDark" Margin="16">
            <GroupBox.HeaderTemplate>
                <DataTemplate>
                    <DockPanel Height="32">
                        <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/chest.png"/>
                        <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="Container Management"/>
                        <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False" HorizontalAlignment="Right">
                            <StackPanel>
                                <Button x:Name="bntNew" Click="btnNew_Click" >
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="NewBox" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                        <TextBlock Text="New Container" VerticalAlignment="Center" />
                                    </StackPanel>
                                </Button>
                                <Button x:Name="bntDuplicate" Click="btnDuplicate_Click" >
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="ContentCopy" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                        <TextBlock Text="Duplicate Container" VerticalAlignment="Center" />
                                    </StackPanel>
                                </Button>
                                <Button x:Name="btnDelete" Click="btnDelete_Click" >
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="Delete" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                        <TextBlock Text="Delete Container" VerticalAlignment="Center" />
                                    </StackPanel>
                                </Button>
                                <Separator />
                                <StackPanel Margin="18,10,20,10">
                                    <CheckBox Content="Suppress Popups?" IsChecked="{Binding IsChecked, ElementName=SuppressContainerEditPopups, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Checked="SuppressContainerEditPopups_Checked" Unchecked="SuppressContainerEditPopups_Checked" />
                                </StackPanel>
                            </StackPanel>
                        </materialDesign:PopupBox>
                    </DockPanel>
                </DataTemplate>
            </GroupBox.HeaderTemplate>

            <StackPanel VerticalAlignment="Top"  >
                <!--                                                                                                                    BASIC INFORMATION & CURRENCY -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="True" >
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/coins.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="Basic Information &amp; Currency"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <TextBlock Text="Container Basics:" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                            <StackPanel Orientation="Horizontal" Margin="24,0,24,16">
                                <TextBlock Text="Container Name: " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,0,4" VerticalAlignment="Bottom" Width="175" />
                                <TextBox x:Name="txtContainerName" materialDesign:HintAssist.Hint="Container Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextChanged="txtContainerName_TextChanged" HorizontalContentAlignment="Stretch" Width="562" />
                            </StackPanel>
                            <TextBlock x:Name="txtContainerNameError" Text="Error: Container name already in use" Margin="200,-8,0,-8" FontWeight="Medium" FontStyle="Italic" FontSize="12" Foreground="#FF388E3C" Visibility="Hidden" />
                            <TextBlock x:Name="txtContainerNameEmptyError" Text="Error: Container name cannot be empty" Margin="200,-8,0,-8" FontWeight="Medium" FontStyle="Italic" FontSize="12" Foreground="#FF388E3C" Visibility="Hidden" />
                            <StackPanel Orientation="Horizontal" Margin="24,0,24,16">
                                <TextBlock Text="Container Type: " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,0,4" VerticalAlignment="Bottom" Width="175" />
                                <ComboBox x:Name="comboContainerType" materialDesign:HintAssist.Hint="Container Type" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26"  DropDownClosed="comboContainerType_DropDownClosed" TextBoxBase.TextChanged="comboContainerType_TextChanged" Width="562" IsEditable="True" />
                            </StackPanel>
                            <StackPanel Margin="24,16">
                                <TextBlock Text="Container Description: " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0" VerticalAlignment="Center" Width="150" HorizontalAlignment="Left" />
                                <TextBox x:Name="txtContainerDescription" materialDesign:HintAssist.Hint="Container Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26"  TextWrapping="Wrap" VerticalAlignment="Top" Margin="16,16,0,0" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="200" TextChanged="txtContainerDescription_TextChanged" />
                            </StackPanel>
                            <Separator Margin="0,16,0,32" Background="{StaticResource PrimaryHueMidBrush}" />
                            <TextBlock Text="Currency:" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                            <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="Use the options below to select the minimum and maximum currency values for each currency type. Differing values will result in a random number between the two values being selected. Matching values will ensure that amount of currency is guaranteed. Matching values of zero will prevent that type of currency from being included." Margin="24,8,24,16" HorizontalAlignment="Left" />
                            <DockPanel Margin="0,0,0,16">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="24,0,0,0">
                                    <TextBlock Text="Copper (Min): " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,8,4" VerticalAlignment="Center" Width="150" />
                                    <TextBox x:Name="txtCopperMin" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" TextBoxBase.TextChanged="txtCopperMin_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                    <StackPanel Margin="0">
                                        <RepeatButton x:Name="btnCopperMinUp" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnCopperMinUp_Click" >
                                            <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                        <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                        <RepeatButton x:Name="btnCopperMinDown" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnCopperMinDown_Click" >
                                            <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,24,0" >
                                    <TextBlock Text="Copper (Max): " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,8,4" VerticalAlignment="Center" Width="150" />
                                    <TextBox x:Name="txtCopperMax" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" TextBoxBase.TextChanged="txtCopperMax_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                    <StackPanel Margin="0">
                                        <RepeatButton x:Name="btnCopperMaxUp" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnCopperMaxUp_Click" >
                                            <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                        <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                        <RepeatButton x:Name="btnCopperMaxDown" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnCopperMaxDown_Click" >
                                            <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                    </StackPanel>
                                </StackPanel>
                            </DockPanel>
                            <DockPanel Margin="0,0,0,16">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="24,0,0,0">
                                    <TextBlock Text="Silver (Min): " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,8,4" VerticalAlignment="Center" Width="150" />
                                    <TextBox x:Name="txtSilverMin" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" TextBoxBase.TextChanged="txtSilverMin_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                    <StackPanel Margin="0">
                                        <RepeatButton x:Name="btnSilverMinUp" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnSilverMinUp_Click" >
                                            <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                        <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                        <RepeatButton x:Name="btnSilverMinDown" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnSilverMinDown_Click" >
                                            <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,24,0" >
                                    <TextBlock Text="Silver (Max): " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,8,4" VerticalAlignment="Center" Width="150" />
                                    <TextBox x:Name="txtSilverMax" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" TextBoxBase.TextChanged="txtSilverMax_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                    <StackPanel Margin="0">
                                        <RepeatButton x:Name="btnSilverMaxUp" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnSilverMaxUp_Click" >
                                            <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                        <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                        <RepeatButton x:Name="btnSilverMaxDown" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnSilverMaxDown_Click" >
                                            <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                    </StackPanel>
                                </StackPanel>
                            </DockPanel>
                            <DockPanel Margin="0,0,0,8">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="24,0,0,0">
                                    <TextBlock Text="Electrum (Min): " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,8,4" VerticalAlignment="Center" Width="150" />
                                    <TextBox x:Name="txtElectrumMin" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" TextBoxBase.TextChanged="txtElectrumMin_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                    <StackPanel Margin="0">
                                        <RepeatButton x:Name="btnElectrumMinUp" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnElectrumMinUp_Click" >
                                            <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                        <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                        <RepeatButton x:Name="btnElectrumMinDown" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnElectrumMinDown_Click" >
                                            <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,24,0" >
                                    <TextBlock Text="Electrum (Max): " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,8,4" VerticalAlignment="Center" Width="150" />
                                    <TextBox x:Name="txtElectrumMax" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" TextBoxBase.TextChanged="txtElectrumMax_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                    <StackPanel Margin="0">
                                        <RepeatButton x:Name="btnElectrumMaxUp" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnElectrumMaxUp_Click" >
                                            <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                        <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                        <RepeatButton x:Name="btnElectrumMaxDown" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnElectrumMaxDown_Click" >
                                            <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                    </StackPanel>
                                </StackPanel>
                            </DockPanel>
                            <DockPanel Margin="0,0,0,16">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="24,0,0,0">
                                    <TextBlock Text="Gold (Min): " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,8,4" VerticalAlignment="Center" Width="150" />
                                    <TextBox x:Name="txtGoldMin" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" TextBoxBase.TextChanged="txtGoldMin_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                    <StackPanel Margin="0">
                                        <RepeatButton x:Name="btnGoldMinUp" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnGoldMinUp_Click" >
                                            <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                        <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                        <RepeatButton x:Name="btnGoldMinDown" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnGoldMinDown_Click" >
                                            <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,24,0" >
                                    <TextBlock Text="Gold (Max): " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,8,4" VerticalAlignment="Center" Width="150" />
                                    <TextBox x:Name="txtGoldMax" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" TextBoxBase.TextChanged="txtGoldMax_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                    <StackPanel Margin="0">
                                        <RepeatButton x:Name="btnGoldMaxUp" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnGoldMaxUp_Click" >
                                            <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                        <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                        <RepeatButton x:Name="btnGoldrMaxDown" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnGoldMaxDown_Click" >
                                            <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                    </StackPanel>
                                </StackPanel>
                            </DockPanel>
                            <DockPanel Margin="0,0,0,8">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="24,0,0,0">
                                    <TextBlock Text="Platinum (Min): " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,8,4" VerticalAlignment="Center" Width="150" />
                                    <TextBox x:Name="txtPlatinumMin" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" TextBoxBase.TextChanged="txtPlatinumMin_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                    <StackPanel Margin="0">
                                        <RepeatButton x:Name="btnPlatinumMinUp" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnPlatinumMinUp_Click" >
                                            <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                        <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                        <RepeatButton x:Name="btnPlatinumMinDown" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnPlatinumMinDown_Click" >
                                            <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,24,0" >
                                    <TextBlock Text="Platinum (Max): " Style="{StaticResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Margin="0,0,8,4" VerticalAlignment="Center" Width="150" />
                                    <TextBox x:Name="txtPlatinumMax" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" TextBoxBase.TextChanged="txtPlatinumMax_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                    <StackPanel Margin="0">
                                        <RepeatButton x:Name="btnPlatinumMaxUp" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnPlatinumMaxUp_Click" >
                                            <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                        <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                        <RepeatButton x:Name="btnPlatinumMaxDown" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnPlatinumMaxDown_Click" >
                                            <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                        </RepeatButton>
                                    </StackPanel>
                                </StackPanel>
                            </DockPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    MUNDANE ITEMS -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/dice.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="Mundane Items"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel Margin="16,0,16,16">
                            <TextBlock Text="Mundane Items:" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="24,8,24,16" Padding="0,0,16,0" HorizontalAlignment="Left" Text="Mundane items are typically the common, ordinary, or simple items that are often present in any environment. They are so simple that they often only need very little description or no description at all, and are usually listed with their values. The mundane items list is the same for each container, but you may specify individual minimum and maximum values for each container. To edit the mundane item list, click the &quot;Edit Mundane Items&quot; button below. Please note that each item should be on its own line." />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="24,0">
                                <StackPanel Margin="0,0,8,0">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                        <Button x:Name="btnMundaneEdit" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="175" Click="btnMundaneEdit_Click">
                                            <StackPanel Orientation="Horizontal">
                                                <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                                <TextBlock Text="Edit Mundane Items" VerticalAlignment="Center" FontSize="12" />
                                            </StackPanel>
                                        </Button>
                                        <StackPanel Width="99" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <TextBlock TextWrapping="Wrap" TextAlignment="Center" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="Mundane Items:" Margin="8,0,-8,8" FontSize="10" Padding="0,0,16,0" FontWeight="Bold" />
                                            <Label x:Name="lblMundaneItems" DockPanel.Dock="Right" Content="0" BorderBrush="{StaticResource PrimaryHueMidBrush}" Margin="0,0,0,8" FontSize="14" Padding="16,8" BorderThickness="1" Height="35" HorizontalAlignment="Center" HorizontalContentAlignment="Stretch" />
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Left">
                                    <StackPanel>
                                        <DockPanel Margin="0">
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="16,0">
                                                <StackPanel>
                                                    <TextBlock Text="Mundane Items (Min):" Style="{StaticResource MaterialDesignBody1TextBlock}" TextWrapping="Wrap" Margin="0,0,8,8" VerticalAlignment="Center" FontSize="10" FontWeight="Bold" HorizontalAlignment="Left" />
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBox x:Name="txtMundaneMin" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="150"  TextBoxBase.TextChanged="txtMundaneMin_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                        <StackPanel Margin="0">
                                                            <RepeatButton x:Name="a4" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnMundaneMinUp_Click" >
                                                                <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                                            </RepeatButton>
                                                            <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                            <RepeatButton x:Name="b4" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnMundaneMinDown_Click" >
                                                                <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                            </RepeatButton>
                                                        </StackPanel>
                                                    </StackPanel>
                                                </StackPanel>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="16,0">
                                                <StackPanel>
                                                    <TextBlock Text="Mundane Items (Max):" Style="{StaticResource MaterialDesignBody1TextBlock}" TextWrapping="Wrap" Margin="0,0,8,8" VerticalAlignment="Center" FontSize="10" FontWeight="Bold" HorizontalAlignment="Left" />
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBox x:Name="txtMundaneMax" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="150"  TextBoxBase.TextChanged="txtMundaneMax_TextChanged" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                        <StackPanel Margin="0">
                                                            <RepeatButton x:Name="c4" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnMundaneMaxUp_Click" >
                                                                <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20"/>
                                                            </RepeatButton>
                                                            <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                            <RepeatButton x:Name="d4" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" Click="btnMundaneMaxDown_Click" >
                                                                <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                            </RepeatButton>
                                                        </StackPanel>
                                                    </StackPanel>
                                                </StackPanel>
                                            </StackPanel>
                                        </DockPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    ARMOR SETS -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Armor Sets</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/armor.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Full Sets of Armor)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblArmorSetsItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtArmorSetsMin" TextBoxBase.TextChanged="txtArmorSetsMin_TextChanged" materialDesign:HintAssist.Hint="Armor Sets (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnArmorSetsMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnArmorSetsMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtArmorSetsMax" TextBoxBase.TextChanged="txtArmorSetsMax_TextChanged" materialDesign:HintAssist.Hint="Armor Sets (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnArmorSetsMaxUp_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnArmorSetsMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboArmorSetsImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="505" Margin="0,0,24,0" />
                                            <Button x:Name="btnArmorSetsImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Right" Width="200" Click="btnArmorSetsImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtArmorSetsName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtArmorSetsValue" Width="150" Text="0gp" TextAlignment="Center" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" HorizontalContentAlignment="Stretch" />
                                </StackPanel>
                                <TextBox x:Name="txtArmorSetsDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnArmorSetsAdd" Click="btnArmorSetsAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnArmorSetsAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnArmorSetsEdit" Click="btnArmorSetsEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnArmorSetsDuplicate" Click="btnArmorSetsDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnArmorSetsRemove" Click="btnArmorSetsRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}"  Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnArmorSetsClear" Click="btnArmorSetsClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}"  Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataArmorSetsItems" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    ARMOR PIECES -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Armor Pieces</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/armor.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Individual Pieces of Armor)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblArmorPiecesItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtArmorPiecesMin" TextBoxBase.TextChanged="txtArmorPiecesMin_TextChanged" materialDesign:HintAssist.Hint="Armor Pieces (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnArmorPiecesMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnArmorPiecesMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtArmorPiecesMax" TextBoxBase.TextChanged="txtArmorPiecesMax_TextChanged" materialDesign:HintAssist.Hint="Armor Pieces (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnArmorPiecesMaxUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnArmorPiecesMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboArmorPiecesImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="504" Margin="0,0,24,0" />
                                            <Button x:Name="btnArmorPiecesImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Center" Width="200" Click="btnArmorPiecesImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtArmorPiecesName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtArmorPiecesValue" Width="150" Text="0gp" TextAlignment="Center" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26"  PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown"/>
                                </StackPanel>
                                <TextBox x:Name="txtArmorPiecesDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnArmorPiecesAdd" Click="btnArmorPiecesAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnArmorPiecesAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnArmorPiecesEdit" Click="btnArmorPiecesEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnArmorPiecesDuplicate" Click="btnArmorPiecesDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnArmorPiecesRemove" Click="btnArmorPiecesRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnArmorPiecesClear" Click="btnArmorPiecesClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataArmorPieces" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    WEAPONS -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Weapons</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/weapon.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Swords, Axes, Bows, Crossbows, Etc)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblWeaponItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtWeaponMin" TextBoxBase.TextChanged="txtWeaponMin_TextChanged" materialDesign:HintAssist.Hint="Weapons (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnWeaponMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnWeaponMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtWeaponMax" TextBoxBase.TextChanged="txtWeaponMax_TextChanged" materialDesign:HintAssist.Hint="Weapons (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnWeaponMaxUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnWeaponMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboWeaponImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="510" Margin="0,0,24,0" />
                                            <Button x:Name="btnWeaponsImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Center" Width="200" Click="btnWeaponsImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtWeaponName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtWeaponValue" Text="0gp" TextAlignment="Center" Width="150" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                </StackPanel>
                                <TextBox x:Name="txtWeaponDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnWeaponAdd" Click="btnWeaponAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnWeaponAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnWeaponEdit" Click="btnWeaponEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnWeaponDuplicate" Click="btnWeaponDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnWeaponRemove" Click="btnWeaponRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnWeaponClear" Click="btnWeaponClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataWeaponItems" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    AMMO -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Ammo</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/weapon.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Arrows, Bolts, Darts, Sling Bullets, Etc)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblAmmoItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtAmmoMin" TextBoxBase.TextChanged="txtAmmoMin_TextChanged" materialDesign:HintAssist.Hint="Ammo (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnAmmoMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnAmmoMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtAmmoMax" TextBoxBase.TextChanged="txtAmmoMax_TextChanged" materialDesign:HintAssist.Hint="Ammo (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnAmmoMaxUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnAmmoMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboAmmoImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="515" Margin="0,0,24,0" />
                                            <Button x:Name="btnAmmoImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Center" Width="200" Click="btnAmmoImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtAmmoName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtAmmoValue" Text="0gp" TextAlignment="Center" Width="150" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                </StackPanel>
                                <TextBox x:Name="txtAmmoDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnAmmoAdd" Click="btnAmmoAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnAmmoAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnAmmoEdit" Click="btnAmmoEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnAmmoDuplicate" Click="btnAmmoDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnAmmoRemove" Click="btnAmmoRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnAmmoClear" Click="btnAmmoClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataAmmoItems" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    CLOTHING -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Clothing</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/gear.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Full Outfits, Robes, Individual Clothing Pieces, Etc)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblClothingItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtClothingMin" TextBoxBase.TextChanged="txtClothingMin_TextChanged" materialDesign:HintAssist.Hint="Clothing (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnClothingMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnClothingMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtClothingMax" TextBoxBase.TextChanged="txtClothingMax_TextChanged" materialDesign:HintAssist.Hint="Clothing (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnClothingMaxUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnClothingMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboClothingImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="515" Margin="0,0,24,0" />
                                            <Button x:Name="btnClothingImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Center" Width="200" Click="btnClothingImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtClothingName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtClothingValue" Text="0gp" TextAlignment="Center" Width="150" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                </StackPanel>
                                <TextBox x:Name="txtClothingDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnClothingAdd" Click="btnClothingAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnClothingAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnClothingEdit" Click="btnClothingEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnClothingDuplicate" Click="btnClothingDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnClothingRemove" Click="btnClothingRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnClothingClear" Click="btnClothingClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataClothingItems" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    CLOTHING ACCESSORIES -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Clothing Accessories</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/gear.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Belts, Gloves, Capes, Cloaks, Hoods, Hats, Masks, Shoes, Etc)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblClothingAccessoriesItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtClothingAccessoriesMin" TextBoxBase.TextChanged="txtClothingAccessoriesMin_TextChanged" materialDesign:HintAssist.Hint="Clothing Accessories (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnClothingAccessoriesMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnClothingAccessoriesMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtClothingAccessoriesMax" TextBoxBase.TextChanged="txtClothingAccessoriesMax_TextChanged" materialDesign:HintAssist.Hint="Clothing Accessories (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnClothingAccessoriesMaxUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnClothingAccessoriesMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboClothingAccessoriesImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="472" Margin="0,0,24,0" />
                                            <Button x:Name="btnClothingAccessoriesImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Center" Click="btnClothingAccessoriesImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtClothingAccessoriesName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtClothingAccessoriesValue" Text="0gp" TextAlignment="Center" Width="150" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                </StackPanel>
                                <TextBox x:Name="txtClothingAccessoriesDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnClothingAccessoriesAdd" Click="btnClothingAccessoriesAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnClothingAccessoriesAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnClothingAccessoriesEdit" Click="btnClothingAccessoriesEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnClothingAccessoriesDuplicate" Click="btnClothingAccessoriesDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnClothingAccessoriesRemove" Click="btnClothingAccessoriesRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnClothingAccessoriesClear" Click="btnClothingAccessoriesClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataClothingAccessoriesItems" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    FOOD & DRINKS -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Food &amp; Drinks</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/food.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Rations, Meats, Cheeses, Water Skins, Wine, Ale, Etc)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblFoodDrinkItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtFoodDrinkMin" TextBoxBase.TextChanged="txtFoodDrinkMin_TextChanged" materialDesign:HintAssist.Hint="Food &amp; Drinks (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnFoodDrinkMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnFoodDrinkMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtFoodDrinkMax" TextBoxBase.TextChanged="txtFoodDrinkMax_TextChanged" materialDesign:HintAssist.Hint="Food &amp; Drinks (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnFoodDrinkMaxUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnFoodDrinkMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboFoodDrinkImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="504" Margin="0,0,24,0" />
                                            <Button x:Name="btnFoodDrinkImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Center" Width="200" Click="btnFoodDrinkImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtFoodDrinkName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtFoodDrinkValue" Text="0gp" TextAlignment="Center" Width="150" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                </StackPanel>
                                <TextBox x:Name="txtFoodDrinkDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnFoodDrinkAdd" Click="btnFoodDrinkAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnFoodDrinkAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnFoodDrinkEdit" Click="btnFoodDrinkEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnFoodDrinkDuplicate" Click="btnFoodDrinkDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnFoodDrinkRemove" Click="btnFoodDrinkRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnFoodDrinkClear" Click="btnFoodDrinkClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataFoodDrinkItems" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    TRADE GOODS -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Trade Goods</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/coins.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Materials, Metals, Supplies, Etc)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblTradeGoodsItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtTradeGoodsMin" TextBoxBase.TextChanged="txtTradeGoodsMin_TextChanged" materialDesign:HintAssist.Hint="Trade Goods (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnTradeGoodsMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnTradeGoodsMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtTradeGoodsMax" TextBoxBase.TextChanged="txtTradeGoodsMax_TextChanged" materialDesign:HintAssist.Hint="Trade Goods (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnTradeGoodsMaxUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnTradeGoodsMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboTradeGoodsImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="512" Margin="0,0,24,0" />
                                            <Button x:Name="btnTradeGoodsImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Center" Width="200" Click="btnTradeGoodsImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtTradeGoodsName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtTradeGoodsValue" Text="0gp" TextAlignment="Center" Width="150" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                </StackPanel>
                                <TextBox x:Name="txtTradeGoodsDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnTradeGoodsAdd" Click="btnTradeGoodsAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnTradeGoodsAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnTradeGoodsEdit" Click="btnTradeGoodsEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnTradeGoodsDuplicate" Click="btnTradeGoodsDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnTradeGoodsRemove" Click="btnTradeGoodsRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnTradeGoodsClear" Click="btnTradeGoodsClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataTradeGoodsItems" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    PRECIOUS ITEMS -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Precious Items</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/ring.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Rings, Amulets, Gems, Valuables, Etc)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblPreciousItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtPreciousItemsMin" TextBoxBase.TextChanged="txtPreciousItemsMin_TextChanged" materialDesign:HintAssist.Hint="Precious Items (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnPreciousItemsMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnPreciousItemsMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtPreciousItemsMax" TextBoxBase.TextChanged="txtPreciousItemsMax_TextChanged" materialDesign:HintAssist.Hint="Precious Items (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnPreciousItemsMaxUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnPreciousItemsMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboPreciousItemsImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="504" Margin="0,0,24,0" />
                                            <Button x:Name="btnPreciousItemsImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Center" Width="200" Click="btnPreciousItemsImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtPreciousItemsName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtPreciousItemsValue" Text="0gp" TextAlignment="Center" Width="150" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                </StackPanel>
                                <TextBox x:Name="txtPreciousItemsDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnPreciousItemsAdd" Click="btnPreciousItemsAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnPreciousItemsAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnPreciousItemsEdit" Click="btnPreciousItemsEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnPreciousItemsDuplicate" Click="btnPreciousItemsDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnPreciousItemsRemove" Click="btnPreciousItemsRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnPreciousItemsClear" Click="btnPreciousItemsClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataPreciousItems" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    ART & DECOR -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Art &amp; Decor</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/painting.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Paintings, Tapestries, Carpets, Figurines, Idols, Busts, Statues, Etc)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblArtDecorItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtArtDecorMin" TextBoxBase.TextChanged="txtArtDecorMin_TextChanged" materialDesign:HintAssist.Hint="Art &amp; Decor (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnArtDecorMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnArtDecorMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtArtDecorMax" TextBoxBase.TextChanged="txtArtDecorMax_TextChanged" materialDesign:HintAssist.Hint="Art &amp; Decor (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnArtDecorMaxUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnArtDecorMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboArtDecorImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="508" Margin="0,0,24,0" />
                                            <Button x:Name="btnArtDecorImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Center" Width="200" Click="btnArtDecorImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtArtDecorName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtArtDecorValue" Text="0gp" TextAlignment="Center" Width="150" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                </StackPanel>
                                <TextBox x:Name="txtArtDecorDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnArtDecorAdd" Click="btnArtDecorAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnArtDecorAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnArtDecorEdit" Click="btnArtDecorEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnArtDecorDuplicate" Click="btnArtDecorDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnArtDecorRemove" Click="btnArtDecorRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnArtDecorClear" Click="btnArtDecorClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataArtDecorItems" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    BOOKS & PAPERS -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Books &amp; Papers</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/map.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Books, Tomes, Scrolls, Papers, Maps, Etc)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblBooksPapersItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtBooksPapersMin" TextBoxBase.TextChanged="txtBooksPapersMin_TextChanged" materialDesign:HintAssist.Hint="Books &amp; Papers (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnBooksPapersMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnBooksPapersMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtBooksPapersMax" TextBoxBase.TextChanged="txtBooksPapersMax_TextChanged" materialDesign:HintAssist.Hint="Books &amp; Papers (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnBooksPapersMaxUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnBooksPapersMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboBooksPapersImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="511" Margin="0,0,24,0" />
                                            <Button x:Name="btnBooksPapersImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Center" Width="200" Click="btnBooksPapersImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtBooksPapersName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtBooksPapersValue" Text="0gp" TextAlignment="Center" Width="150" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                </StackPanel>
                                <TextBox x:Name="txtBooksPapersDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnBooksPapersAdd" Click="btnBooksPapersAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnBooksPapersAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnBooksPapersEdit" Click="btnBooksPapersEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnBooksPapersDuplicate" Click="btnBooksPapersDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnBooksPapersRemove" Click="btnBooksPapersRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnBooksPapersClear" Click="btnBooksPapersClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataBooksPapersItems" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <!--                                                                                                                    OTHER ITEMS -->
                <Expander HorizontalAlignment="Stretch" IsExpanded="False">
                    <Expander.Resources>
                        <System:String x:Key="CategoryName">Other Items</System:String>
                    </Expander.Resources>
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <DockPanel Height="32">
                                <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/LootGoblin;component/Resources/chest.png"/>
                                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} (Everything Else)'}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                    <Border Padding="10" BorderThickness="0,1,0,0" BorderBrush="{StaticResource PrimaryHueMidBrush}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="24,0">
                                <StackPanel Margin="0,0,8,0" Width="400">
                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Number of {0} to Receive:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="8,8,8,16" Padding="0,0,16,0" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to select the minimum and maximum amount of {0} to receive. Differing values will result in a random number of {0} between the two values being selected. Matching values will ensure that number of {0} is selected. Matching values of zero will prevent {0} from being included when loot for this container is generated.'}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Center">
                                        <Label Content="{StaticResource CategoryName}" ContentStringFormat='Total {0} Available:' FontWeight="Bold" VerticalAlignment="Center" Margin="0" BorderThickness="1,1,0,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                        <Label x:Name="lblOtherItems" Foreground="{StaticResource PrimaryHueMidBrush}" Content="0" FontWeight="Bold" BorderThickness="0,1,1,1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Padding="10" FontSize="12" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,8" HorizontalAlignment="Center">
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtOtherMin" TextBoxBase.TextChanged="txtOtherMin_TextChanged" materialDesign:HintAssist.Hint="Other Items (Min)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Width="125" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnOtherMinUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnOtherMinDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20"/>
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <TextBox x:Name="txtOtherMax" TextBoxBase.TextChanged="txtOtherMax_TextChanged" materialDesign:HintAssist.Hint="Other Items (Max)" Text="0" VerticalAlignment="Center" TextAlignment="Center" Width="125" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" PreviewTextInput="txtBoxNumber_PreviewTextInput" PreviewKeyDown="txtBoxNumber_PreviewKeyDown" Margin="0,0,4,0" />
                                                <StackPanel Margin="0">
                                                    <RepeatButton Click="btnOtherMaxUp_Click"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,1,1,0" >
                                                        <materialDesign:PackIcon Kind="MenuUp" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                    <Separator Margin="4,0" Background="{StaticResource PrimaryHueMidBrush}" />
                                                    <RepeatButton Click="btnOtherMaxDown_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Background="{x:Null}" Padding="0" Height="Auto" BorderThickness="1,0,1,1" >
                                                        <materialDesign:PackIcon Kind="MenuDown" VerticalAlignment="Center" Width="20" Height="20" />
                                                    </RepeatButton>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <DockPanel>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0} From Other Containers: (Coming Soon)'}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='The button below allows you to import {0} from another loot container you have created. You can use this sytem to duplicate items from individual existing containers or you can setup some form of master container that holds all of your items. When the button is clicked, the {0} from that loot container are imported to the list below. Importing will give you a list of items to start with so you do not have to manually reenter items that you may already have available elsewhere.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                        <StackPanel Orientation="Horizontal">
                                            <ComboBox x:Name="comboOtherImport" materialDesign:HintAssist.Hint="Container To Import From" Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.HintOpacity=".26" IsEditable="True" Width="508" Margin="0,0,24,0" />
                                            <Button x:Name="btnOtherItemsImport" Style="{StaticResource MaterialDesignRaisedDarkButton}" HorizontalAlignment="Center" Width="200" Click="btnOtherItemsImport_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,8,0" Source="/LootGoblin;component/Resources/chest.png"/>
                                                    <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='Import {0}'}" FontSize="12" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DockPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0" >
                                <TextBlock Text="{Binding Source={StaticResource CategoryName}, StringFormat='{}{0} Details:'}" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Foreground="{StaticResource PrimaryHueMidBrush}" materialDesign:ColorZoneAssist.Mode="Accent" FontWeight="Bold" FontStyle="Italic" Margin="0,0,0,8"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Justify" Style="{StaticResource MaterialDesignBody1TextBlock}" Text="{Binding Source={StaticResource CategoryName}, StringFormat='Use the options below to add new {0} to the {0} list or to update existing ones after selecting an item below and pressing the &quot;Edit Selection&quot; button. After changing the details below, click the &quot;Add Item&quot; button to add the new item to the list or or click the &quot;Update Item&quot; button if the item is being edited.'}" Margin="0,8,0,16" HorizontalAlignment="Left" />
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,16" >
                                    <TextBox x:Name="txtOtherName" Margin="0,0,32,0" Width="555" materialDesign:HintAssist.Hint="Item Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                    <TextBox x:Name="txtOtherValue" Text="0gp" TextAlignment="Center" Width="150" materialDesign:HintAssist.Hint="Item Value" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" />
                                </StackPanel>
                                <TextBox x:Name="txtOtherDescription" materialDesign:HintAssist.Hint="Item Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.HintOpacity=".26" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0,0,0,16" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" MaxHeight="100" />
                                <StackPanel HorizontalAlignment="Right">
                                    <Button x:Name="btnOtherAdd" Click="btnOtherAdd_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Width="172" Margin="8,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock x:Name="btnOtherAddText" Text="Add Item" VerticalAlignment="Center" FontSize="12" HorizontalAlignment="Center" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                            <Separator Margin="0,16" Background="{StaticResource PrimaryHueMidBrush}" />
                            <StackPanel Margin="24,0,24,16" >
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="btnOtherEdit" Click="btnOtherEdit_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0,16,8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="BorderColor" VerticalAlignment="Center" Margin="0,0,8,-4" Width="24" Height="24" />
                                            <TextBlock Text="Edit Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnOtherDuplicate" Click="btnOtherDuplicate_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentDuplicate" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Duplicate Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnOtherRemove" Click="btnOtherRemove_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ContentCut" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                                            <TextBlock Text="Remove Selection" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                    <Button x:Name="btnOtherClear" Click="btnOtherClear_Click" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="8,16,0,16" Width="172">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="DeleteForever" VerticalAlignment="Center" Margin="0,0,8,0" Width="24" Height="24" />
                                            <TextBlock Text="Clear List" VerticalAlignment="Center" FontSize="12" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel>
                                    <DataGrid x:Name="dataOtherItems" BorderThickness="1" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Margin="0" MaxHeight="350" MinHeight="100">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Item Name" MinWidth="225" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="NoWrap" />
                                                        <Setter Property="AcceptsReturn" Value="False" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Item Value" MinWidth="100" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Binding="{Binding Description}" Header="Item Description" MinWidth="430" CanUserReorder="False">
                                                <DataGridTextColumn.ElementStyle>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                    </Style>
                                                </DataGridTextColumn.ElementStyle>
                                                <DataGridTextColumn.EditingElementStyle>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="TextWrapping" Value="Wrap" />
                                                        <Setter Property="AcceptsReturn" Value="true" />
                                                    </Style>
                                                </DataGridTextColumn.EditingElementStyle>
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Expander>
                <Separator Margin="0,16" />
                <CheckBox x:Name="SuppressContainerEditPopups" Visibility="Hidden" Margin="0,-32,0,0" />
                <Button x:Name="btnSave" Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="16,0,16,16" Click="btnSave_Click" >
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="ContentSave" VerticalAlignment="Center" Margin="0,0,8,0" Width="20" Height="20" />
                        <TextBlock Text="Save / Update Container" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
            </StackPanel>
        </GroupBox>
    </Grid>
</UserControl>
